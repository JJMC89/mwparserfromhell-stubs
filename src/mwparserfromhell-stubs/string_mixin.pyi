from collections.abc import Iterator
from typing import Any, SupportsIndex

__all__ = ["StringMixIn"]

class StringMixIn:
    def __bytes__(self) -> bytes: ...
    def __lt__(self, other: object) -> bool: ...
    def __le__(self, other: object) -> bool: ...
    def __eq__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[str]: ...
    def __getitem__(self, key: SupportsIndex | slice) -> str: ...
    def __reversed__(self) -> Iterator[str]: ...
    def __contains__(self, item: object) -> bool: ...
    def __getattr__(self, attr: str) -> Any: ...
    maketrans = str.maketrans
